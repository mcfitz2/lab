stages:
  - test
  - linting
  - build
include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml

isort:
  stage: linting
  image: registry.gitlab.com/mafda/python-linting
  script:
    - isort applications/formula1 --check-only
  only:
    changes:
      - applications/formula1/**/*

black:
  stage: linting
  image: registry.gitlab.com/mafda/python-linting
  script:
    - black --check applications/formula1
  only:
    changes:
      - applications/formula1/**/*

flake8:
  stage: linting
  image: registry.gitlab.com/mafda/python-linting
  script:
    - flake8 applications/formula1
  only:
    changes:
      - applications/formula1/**/*

ansible-lint:
  stage: linting
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  script:
    - ansible-galaxy install -r ansible/requirements.yml
    - export ANSIBLE_ROLES_PATH=$(pwd)/ansible/roles
    - ansible-galaxy install -r ansible/requirements.yml
    - ansible-lint --show-relpath ansible
  allow_failure: true
  only:
    changes:
      - ansible/**/*
build-ansible:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - ansible/**/*
  script:
    - cd ansible
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ansible_runner:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ansible_runner:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ansible_runner:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ansible_runner:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ansible_runner:latest


build-workflows:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/greatlakes/**/*
  script:
    - cd applications/greatlakes
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker compose build
    - docker compose push

build-prefect-exporter:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/prometheus-prefect-exporter/**/*
  script:
    - cd applications/prometheus-prefect-exporter
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/prometheus-prefect-exporter:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/prometheus-prefect-exporter:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/prometheus-prefect-exporter:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/prometheus-prefect-exporter:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/prometheus-prefect-exporter:latest

build-fidelity-calendar:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/fidelity_calendar/**/*
  script:
    - cd applications/fidelity_calendar
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/fidelity_calendar:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/fidelity_calendar:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/fidelity_calendar:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/fidelity_calendar:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/fidelity_calendar:latest


build-habit:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/habit/**/*
  script:
    - cd applications/habit
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/habit:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/habit:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/habit:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/habit:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/habit:latest

build-mm-office:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/magic-mirror/**/*
  script:
    - cd applications/habit
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-office:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-office:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-office:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-office:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-office:latest
build-mm-living-room:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/magic-mirror-home/**/*
  script:
    - cd applications/habit
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-living-room:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-living-room:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-living-room:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-living-room:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/mm-living-room:latest

build-formula1:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    changes:
      - applications/formula1/**/*
  script:
    - cd applications/formula1
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/formula1:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/formula1:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/formula1:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/formula1:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/formula1:latest