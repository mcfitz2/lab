name: CI

on:
  push:
    paths:
      - 'applications/**/*'
      - '.github/workflows/**'
      - 'ansible/**/*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # linting:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       linter: [isort, black, flake8]
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Set up Python
  #       if: matrix.linter != 'ansible-lint'
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.x'
          
  #     - name: Install dependencies
  #       if: matrix.linter != 'ansible-lint'
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install ${{ matrix.linter }}
          
  #     - name: Run ${{ matrix.linter }}
  #       if: matrix.linter == 'isort'
  #       run: isort applications/formula1 --check-only
        
  #     - name: Run ${{ matrix.linter }}
  #       if: matrix.linter == 'black'
  #       run: black --check applications/formula1
        
  #     - name: Run ${{ matrix.linter }}
  #       if: matrix.linter == 'flake8'
  #       run: flake8 applications/formula1

  # ansible-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Run ansible-lint
  #       uses: ansible/ansible-lint-action@main
  #       with:
  #         path: "ansible/"
  #       continue-on-error: true

  # secret-detection:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Run Secret Detection
  #       uses: gitleaks/gitleaks-action@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    # needs: [linting, ansible-lint]
    strategy:
      matrix:
        include:
          - dir: ansible
            image_suffix: ansible
            dockerfile: ansible/Dockerfile
          - dir: applications/prometheus-prefect-exporter
            image_suffix: prometheus-prefect-exporter
            dockerfile: applications/prometheus-prefect-exporter/Dockerfile
          - dir: applications/fidelity_calendar
            image_suffix: fidelity_calendar
            dockerfile: applications/fidelity_calendar/Dockerfile
          - dir: applications/namada_exporter
            image_suffix: namada_exporter
            dockerfile: applications/namada_exporter/Dockerfile
          - dir: applications/habit
            image_suffix: habit
            dockerfile: applications/habit/Dockerfile
          - dir: applications/magic-mirror
            image_suffix: mm-office
            dockerfile: applications/magic-mirror-home/Dockerfile
          - dir: applications/magic-mirror-home
            image_suffix: mm-living-room
            dockerfile: applications/magic-mirror-home/Dockerfile
          - dir: applications/formula1
            image_suffix: formula1
            dockerfile: applications/formula1/Dockerfile
          - dir: applications/chicahgo
            image_suffix: chicahgo
            dockerfile: applications/chicahgo/Dockerfile
          - dir: applications/greatlakes
            image_suffix: airport-locations
            dockerfile: applications/greatlakes/airport_locations/Dockerfile
          - dir: applications/greatlakes
            image_suffix: oauth
            dockerfile: applications/greatlakes/oauth-service/Dockerfile
          - dir: applications/greatlakes
            image_suffix: uptime
            dockerfile: applications/greatlakes/uptime-service/Dockerfile
          - dir: applications/greatlakes
            image_suffix: takeout
            dockerfile: applications/greatlakes/takeout/Dockerfile
          - dir: applications/greatlakes
            image_suffix: row-counts
            dockerfile: applications/greatlakes/row_counts/Dockerfile
          - dir: applications/greatlakes
            image_suffix: austin-energy
            dockerfile: applications/greatlakes/austin_energy/Dockerfile
          - dir: applications/greatlakes
            image_suffix: fitbit-api
            dockerfile: applications/greatlakes/fitbit_api/Dockerfile
          - dir: applications/greatlakes
            image_suffix: sms
            dockerfile: applications/greatlakes/sms/Dockerfile
          - dir: applications/greatlakes
            image_suffix: calls
            dockerfile: applications/greatlakes/calls/Dockerfile
          - dir: applications/greatlakes
            image_suffix: ynab
            dockerfile: applications/greatlakes/ynab/Dockerfile
          - dir: applications/greatlakes
            image_suffix: weather
            dockerfile: applications/greatlakes/weather/Dockerfile
          - dir: applications/greatlakes
            image_suffix: instagram
            dockerfile: applications/greatlakes/instagram/Dockerfile
          - dir: applications/greatlakes
            image_suffix: stocks
            dockerfile: applications/greatlakes/stocks/Dockerfile
          - dir: applications/greatlakes
            image_suffix: gmail
            dockerfile: applications/greatlakes/gmail/Dockerfile
          - dir: applications/greatlakes
            image_suffix: geocoding
            dockerfile: applications/greatlakes/geocoding/Dockerfile
          - dir: applications/greatlakes
            image_suffix: strava_api
            dockerfile: applications/greatlakes/strava_api/Dockerfile
          - dir: applications/greatlakes
            image_suffix: db_tasks
            dockerfile: applications/greatlakes/db_tasks/Dockerfile
          - dir: applications/greatlakes
            image_suffix: wrench_a_part
            dockerfile: applications/greatlakes/wrench_a_part/Dockerfile
          - dir: applications/greatlakes
            image_suffix: postgres_backup
            dockerfile: applications/greatlakes/postgres_backup/Dockerfile
          - dir: applications/greatlakes
            image_suffix: amr
            dockerfile: applications/greatlakes/mortgage_rates/Dockerfile

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.dir }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/mcfitz2/${{ matrix.image_suffix }}:${{ github.sha }}
            ${{ env.REGISTRY }}/mcfitz2/${{ matrix.image_suffix }}:latest
