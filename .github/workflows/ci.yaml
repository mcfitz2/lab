name: CI

on:
  push:
    paths:
      - 'applications/**/*'
      - '.github/workflows/**'
      - 'ansible/**/*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for file changes

      - name: Get changed directories
        id: changed-dirs
        run: |
          # Get the base branch (typically main)
          BASE_BRANCH="main"
          
          # Find changed directories
          CHANGED_DIRS=$(git diff --name-only $BASE_BRANCH...${{ github.sha }} | grep -v "^\.github/" | sed 's|/[^/]*$||' | sort -u)
          echo "Changed directories: $CHANGED_DIRS"
          echo "CHANGED_DIRS<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_DIRS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Set build matrix
        id: set-matrix
        run: |
          # Define all potential builds
          POTENTIAL_BUILDS='[
            {"dir": "applications/prometheus-prefect-exporter", "image_suffix": "prometheus-prefect-exporter", "dockerfile": "applications/prometheus-prefect-exporter/Dockerfile"},
            {"dir": "applications/namada_exporter", "image_suffix": "namada_exporter", "dockerfile": "applications/namada_exporter/Dockerfile"},
            {"dir": "applications/habit", "image_suffix": "habit", "dockerfile": "applications/habit/Dockerfile"},
            {"dir": "applications/formula1", "image_suffix": "formula1", "dockerfile": "applications/formula1/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "airport-locations", "dockerfile": "applications/greatlakes/airport_locations/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "oauth", "dockerfile": "applications/greatlakes/oauth-service/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "uptime", "dockerfile": "applications/greatlakes/uptime-service/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "takeout", "dockerfile": "applications/greatlakes/takeout/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "row-counts", "dockerfile": "applications/greatlakes/row_counts/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "austin-energy", "dockerfile": "applications/greatlakes/austin_energy/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "fitbit-api", "dockerfile": "applications/greatlakes/fitbit_api/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "sms", "dockerfile": "applications/greatlakes/sms/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "calls", "dockerfile": "applications/greatlakes/calls/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "ynab", "dockerfile": "applications/greatlakes/ynab/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "weather", "dockerfile": "applications/greatlakes/weather/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "instagram", "dockerfile": "applications/greatlakes/instagram/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "stocks", "dockerfile": "applications/greatlakes/stocks/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "gmail", "dockerfile": "applications/greatlakes/gmail/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "geocoding", "dockerfile": "applications/greatlakes/geocoding/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "strava_api", "dockerfile": "applications/greatlakes/strava_api/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "db_tasks", "dockerfile": "applications/greatlakes/db_tasks/Dockerfile"},
            {"dir": "applications/greatlakes", "image_suffix": "postgres_backup", "dockerfile": "applications/greatlakes/postgres_backup/Dockerfile"}
          ]'
          
          # Filter matrix based on changed directories
          python3 -c '
          import json
          import os
          import sys
          import pprint
          
          potential_builds = json.loads(sys.argv[1])
          changed_dirs = os.environ["CHANGED_DIRS"].strip().split("\n")
          pprint.pprint(changed_dirs)
          # Handle empty string if no directories changed
          if changed_dirs == [""]:
              changed_dirs = []
          
          # Filter builds
          filtered_builds = []
          for build in potential_builds:
              dir_path = build["dir"]
              dockerfile_path = build["dockerfile"]
              
              # Check if this directory or any parent directory has changed
              for changed_dir in changed_dirs:
                  if changed_dir and (dir_path.startswith(changed_dir) or 
                                      os.path.dirname(dockerfile_path).startswith(changed_dir)):
                      filtered_builds.append(build)
                      break
          
          # If running on main branch, or specifically targeting CI workflow, include all builds
          if os.environ.get("GITHUB_REF") == "refs/heads/main" or ".github/workflows" in changed_dirs:
              filtered_builds = potential_builds
          
          # Output the final matrix
          matrix = {"include": filtered_builds}
          pprint.pprint(matrix)
          print(f"::set-output name=matrix::{json.dumps(matrix)}")
          ' "$POTENTIAL_BUILDS"

  build:
    needs: check-changes
    runs-on: ubuntu-latest
    if: ${{ fromJSON(needs.check-changes.outputs.matrix).include[0] }}
    strategy:
      matrix: ${{ fromJSON(needs.check-changes.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.dir }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{github.repository}}/${{ matrix.image_suffix }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{github.repository}}/${{ matrix.image_suffix }}:latest
