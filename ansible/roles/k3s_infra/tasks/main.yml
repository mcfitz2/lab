- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  community.crypto.openssh_keypair:
    path: '~/.ssh/id_rsa'
    regenerate: "full_idempotence"
  delegate_to: localhost
  run_once: true
- name: Create container
  community.general.proxmox:
    vmid: "{{ vmid }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_pass }}"
    api_host: "{{ proxmox_ip }}"
    password: "{{ ansible_ssh_pass }}"
    hostname: '{{ inventory_hostname }}'
    nameserver: "{{ default_gateway }}"
    pubkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    unprivileged: false
    disk: 'zfs-ssd:50'
    ostemplate: 'local:vztmpl/ubuntu-24.04-standard_24.04-2_amd64.tar.zst'
    cores: 2
    memory: 8192
    swap: 512
    onboot: true
    netif: '{"net0":"name=eth0,ip={{ ansible_host }}/24,gw=192.168.1.1,bridge=vmbr0"}'
    timeout: 500
    features:
      - nesting=1
  delegate_to: localhost
  register: creation
  throttle: 1
- name: Add extra options to LXC config
  when: creation.changed
  block:
    - name: Set AppArmor profile
      ansible.builtin.lineinfile:
        path: "/etc/pve/lxc/{{ vmid }}.conf"
        regexp: '^lxc.apparmor.profile:'
        line: "lxc.apparmor.profile: unconfined"
      delegate_to: proxmox

    - name: Add extra options to LXC config
      ansible.builtin.lineinfile:
        path: "/etc/pve/lxc/{{ vmid }}.conf"
        regexp: '^lxc.cgroup.devices.allow:'
        line: "lxc.cgroup.devices.allow: a"
      delegate_to: proxmox

    - name: Add extra options to LXC config
      ansible.builtin.lineinfile:
        path: "/etc/pve/lxc/{{ vmid }}.conf"
        regexp: '^lxc.mount.auto:'
        line: 'lxc.mount.auto: "proc:rw sys:rw"'
      delegate_to: proxmox

    - name: Add extra options to LXC config
      ansible.builtin.lineinfile:
        path: "/etc/pve/lxc/{{ vmid }}.conf"
        regexp: '^lxc.cap.drop:'
        line: 'lxc.cap.drop:'
      delegate_to: proxmox

- name: Start container
  community.general.proxmox:
    vmid: "{{ vmid }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_pass }}"
    api_host: "{{ proxmox_ip }}"
    hostname: '{{ inventory_hostname }}'
    timeout: 500
    state: started
  delegate_to: localhost
  register: started
  throttle: 1

- name: Wait 60 seconds for container to start
  ansible.builtin.pause:
    seconds: 60
  when: started.changed
- name: Remove host from known_hosts
  ansible.builtin.command:
    cmd: "ssh-keygen -R {{ ansible_host }}"
  delegate_to: localhost
  when: creation.changed
  changed_when: true
  throttle: 1
- name: Wait 10 seconds
  ansible.builtin.pause:
    seconds: 10
  throttle: 1
- name: Add host to known_hosts
  ansible.builtin.known_hosts:
    name: "{{ ansible_host }}"
    state: present
    key: "{{ lookup('pipe', 'ssh-keyscan {{ ansible_host }}') }}"
    hash_host: true
  retries: 3
  delay: 3
  register: result
  until: result.failed == false
- name: Wait 600 seconds for target connection to become reachable/usable
  ansible.builtin.wait_for_connection:
    timeout: 120
- name: Gather Facts about hosts
  ansible.builtin.gather_facts:
