proxmox_inventory_name: proxmox
bitwarden_state_dir: /tmp/bitwarden
k3s_version: v1.32.2+k3s1
systemd_dir: /etc/systemd/system
extra_server_args: "--write-kubeconfig-mode=644"
extra_agent_args: ""
copy_kubeconfig: true
cluster_nfs_host: k3snfs
cluster_master: k3s1
nfs_server_host: "{{ hostvars[cluster_nfs_host]['ansible_host'] }}"
cluster_nfs_export: /cluster
media_nfs_export: /primary/media
geocoder_nfs_export: /primary/geocoder
master_ip: "{{ hostvars[cluster_master]['ansible_host'] }}"
nfs_exports: [
  "{{ cluster_nfs_export }}    *(rw,sync,no_root_squash)",
  "{{ geocoder_nfs_export }}    *(rw,sync,no_root_squash)",
  "{{ media_nfs_export }}    *(rw,sync,no_root_squash)"
]

cloudflare_tunnel_operator_url: https://github.com/adyanth/cloudflare-operator/config/default
tunnel_name: k3s-tunnel
tunnel_domain: "{{ lookup('bitwarden.secrets.lookup', '5fb55d28-9ca8-4c9f-8c02-b202013c6ae5', state_file_dir=bitwarden_state_dir) }}"
cloudflare_email: "{{ lookup('bitwarden.secrets.lookup', 'b22ca726-b3eb-45ad-971e-b202013c21f3', state_file_dir=bitwarden_state_dir) }}"
cloudflare_account_name: "{{ lookup('bitwarden.secrets.lookup', 'b22ca726-b3eb-45ad-971e-b202013c21f3', state_file_dir=bitwarden_state_dir) }}"
cloudflare_account_id: "{{ lookup('bitwarden.secrets.lookup', '5d08031f-2aca-4bb4-a373-b20201315c25', state_file_dir=bitwarden_state_dir) }}"
cloudflare_api_key: "{{ lookup('bitwarden.secrets.lookup', '863b2844-68c2-4292-9605-b202013943fa', state_file_dir=bitwarden_state_dir) }}"
cloudflare_api_token: k3s-tunnel
argocd_admin_pass: "{{ lookup('bitwarden.secrets.lookup', '8f9cc19e-e65d-4816-a277-b2020139abe6', state_file_dir=bitwarden_state_dir) }}"
gitlab_token: "{{ lookup('bitwarden.secrets.lookup', 'fea627b6-00c0-4f03-b9c7-b2020139dc7d', state_file_dir=bitwarden_state_dir) }}"
github_token: "{{ lookup('bitwarden.secrets.lookup', 'e1820cf0-45b3-4e88-ad56-b27d013bc5f2', state_file_dir=bitwarden_state_dir) }}"

gitlab_user: mcfitz2
node_exporter_version: '0.18.1'
kubernetes_root: "{{ ansible_config_file | dirname }}/../kubernetes"
radarr_fqdn: radarr.micahf.net
sonarr_fqdn: sonarr.micahf.net
nzbgeek_api_key: "{{ lookup('bitwarden.secrets.lookup', '8449f4d7-0cc0-409b-a15a-b202013ea29e', state_file_dir=bitwarden_state_dir) }}"
tvdb_api_key: "{{ lookup('bitwarden.secrets.lookup', '5fc9f51d-be6f-4a70-b8bd-b202013e8767', state_file_dir=bitwarden_state_dir) }}"
tvdb_pin: "{{ lookup('bitwarden.secrets.lookup', '802b73a7-b1a0-4fbe-ad08-b202013eb434', state_file_dir=bitwarden_state_dir) }}"



overseer_fqdn: "overseerr.{{ tunnel_domain }}"
tautulli_fqdn: "tautulli.{{ tunnel_domain }}"
fidelity_calendar_fqdn: "shares.{{ tunnel_domain }}"
oauth_service_fqdn: "oauth.{{ tunnel_domain }}"
grafana_fqdn: "grafana.{{ tunnel_domain }}"
pgadmin_fqdn: "pgadmin.{{ tunnel_domain }}"
prowlarr_fqdn: "prowlarr.{{ tunnel_domain }}"
nzbget_fqdn: "nzbget.{{ tunnel_domain }}"
transmission_fqdn: "transmission.{{ tunnel_domain }}"
chicahgo_fqdn: "chicahgo.{{ tunnel_domain }}"
metabase_fqdn: "metabase.{{ tunnel_domain }}"


greatlakes_host: "{{ hostvars['greatlakes-db']['ansible_host'] }}"
greatlakes_user: "{{ lookup('bitwarden.secrets.lookup', 'e4313714-d00a-48e7-a29a-b20201410624', state_file_dir=bitwarden_state_dir) }}"
greatlakes_port: 5432
greatlakes_pass: "{{ lookup('bitwarden.secrets.lookup', '00df690f-e42c-4695-99ac-b20201412253', state_file_dir=bitwarden_state_dir) }}"
greatlakes_db: greatlakes


unifi_user: "{{ lookup('bitwarden.secrets.lookup', '86e83d12-01ea-4680-a7ca-b2020141977c', state_file_dir=bitwarden_state_dir) }}"
unifi_pass: "{{ lookup('bitwarden.secrets.lookup', '3dcdb1df-d7d8-473c-8615-b2020141b315', state_file_dir=bitwarden_state_dir) }}"

influxdb_token: "{{ lookup('bitwarden.secrets.lookup', '3011106e-b82d-4972-96a5-b20201422e51', state_file_dir=bitwarden_state_dir) }}"

proxmox_host: proxmox
proxmox_user: "{{ lookup('bitwarden.secrets.lookup', '188b17de-40d1-495d-b78f-b20201433f99', state_file_dir=bitwarden_state_dir) }}"
proxmox_token_name: "{{ lookup('bitwarden.secrets.lookup', 'c1d0fad3-b9dd-470d-a2b5-b20201432b8d', state_file_dir=bitwarden_state_dir) }}"
proxmox_token: "{{ lookup('bitwarden.secrets.lookup', '8baa6594-b2a0-44d6-a442-b20201431555', state_file_dir=bitwarden_state_dir) }}"
proxmox_ip: "{{ hostvars[proxmox_host]['ansible_host'] }}"
proxmox_node: "pve-heavy"
proxmox_port: 8006
proxmox_pass: "{{ lookup('bitwarden.secrets.lookup', 'c59e4eef-9ffb-4ba8-8797-b202013a47d5') }}"


uptime_kuma_basic_auth: "{{ lookup('bitwarden.secrets.lookup', '7586ea6a-6e40-4199-9889-b2020144451a', state_file_dir=bitwarden_state_dir) }}"
uptime_kuma_ip: "{{ hostvars['rescue']['ansible_host'] }}"
docker_ip: "{{ hostvars['docker']['ansible_host'] }}"


immich_db_user: "{{ lookup('bitwarden.secrets.lookup', '5d15e47c-b3eb-466c-9f8c-b2020145fb7a', state_file_dir=bitwarden_state_dir) }}"
immich_db_pass: "{{ lookup('bitwarden.secrets.lookup', '022c7fea-91c2-4ed1-8aa6-b20201461645', state_file_dir=bitwarden_state_dir) }}"
immich_db_name: "{{ lookup('bitwarden.secrets.lookup', 'c4d96c63-4db6-47b2-ad52-b2020146296b', state_file_dir=bitwarden_state_dir) }}"

pgadmin_user: "{{ lookup('bitwarden.secrets.lookup', 'b22ca726-b3eb-45ad-971e-b202013c21f3', state_file_dir=bitwarden_state_dir) }}"
pgadmin_pass: "{{ lookup('bitwarden.secrets.lookup', 'c59e4eef-9ffb-4ba8-8797-b202013a47d5', state_file_dir=bitwarden_state_dir) }}"

homeassistant_ip: "{{ hostvars['homeassistant']['ansible_host'] }}"
unifi_ip: "{{ hostvars['dream_machine']['ansible_host'] }}"


b2_key_id: "{{ lookup('bitwarden.secrets.lookup', '5f4b653b-3c74-45f8-be93-b20a01320052', state_file_dir=bitwarden_state_dir) }}"
b2_key_value: "{{ lookup('bitwarden.secrets.lookup', 'a397ed91-83b7-40ee-8ca3-b20a01321a06', state_file_dir=bitwarden_state_dir) }}"
b2_endpoint: "s3.us-east-005.backblazeb2.com"
proxmox_backup_bucket: mcfitz2-backups
k8up_backup_repo_pass: "{{ lookup('bitwarden.secrets.lookup', 'c59e4eef-9ffb-4ba8-8797-b202013a47d5', state_file_dir=bitwarden_state_dir) }}"
default_gateway: "{{ unifi_ip }}"
pve_exporter_port: 30206
node_exporter_port: 9101
unpoller_port: 30207
k8up_port: 30209
prometheus_prefect_exporter_port: 30210
nzbget_exporter_port: 30211
transmission_exporter_port: 30212
namada_exporter_port: 30213

alertable_entities:
  # - sensor.tz3000_bguser20_ts0201_humidity_3
  # - sensor.tz3000_bguser20_ts0201_humidity_2
  # - sensor.tz3000_bguser20_ts0201_temperature_3
  # - sensor.tz3000_bguser20_ts0201_temperature_2
  # - sensor.tz3000_bguser20_ts0201_temperature
  # - sensor.tz3000_bguser20_ts0201_humidity
  # - binary_sensor.tz3000_ayc0ccuk_ts0203_opening
  # - binary_sensor.tz3000_bnai1qnw_ts0203_opening
#  - sensor.ewelink_wb01_battery
  - lock.touchscreen_deadbolt
  - binary_sensor.cheese_bowl_limit_switch
#  - sensor.filament_scale_calibrated_weight




prometheus_storage_retention: "1y"
prometheus_scrape_configs_raw: |
  {% for target in groups['node_metrics'] +%}
  - job_name: "{{ target }}"
    metrics_path: "/metrics"
    static_configs:
      - targets:
          - "{{ hostvars[target]['ansible_host'] }}:{{ node_exporter_port }}"
  {%+ endfor %}
  {% for target in groups['esphome'] +%}
  - job_name: "{{ target }}"
    metrics_path: "/metrics"
    static_configs:
      - targets:
          - "{{ hostvars[target]['ansible_host'] }}"
  {%+ endfor %}
  - job_name: 'pve'
    static_configs:
      - targets:
        - "{{ proxmox_ip }}"  # Proxmox VE node.
    metrics_path: /pve
    params:
      module: [default]
      cluster: ['1']
      node: ['1']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{ master_ip }}:{{ pve_exporter_port }}
  - job_name: 'unifipoller'
    scrape_interval: 30s
    static_configs:
      - targets: ['{{ master_ip }}:{{ unpoller_port }}']
  - job_name: "hass"
    scrape_interval: 60s
    metrics_path: /api/prometheus

    # Long-Lived Access Token
    bearer_token: "{{ lookup('bitwarden.secrets.lookup', 'e65cfc6d-311b-42bc-a307-b218011f994d', state_file_dir=bitwarden_state_dir) }}"

    scheme: http
    static_configs:
      - targets: ["{{ hostvars['homeassistant']['ansible_host'] }}:8123"]
  - job_name: 'greatlakes-postgres'
    scrape_interval: 30s
    static_configs:
      - targets: ['{{ greatlakes_host }}:9187']
  - job_name: 'pushgateway'
    honor_labels: true
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9092']
  - job_name: 'prefect'
    scrape_interval: 1m
    scrape_timeout: 30s
    static_configs:
      - targets: ['{{ master_ip }}:{{ prometheus_prefect_exporter_port }}']
  - job_name: 'nzbget'
    scrape_interval: 1m
    scrape_timeout: 30s
    static_configs:
      - targets: ['{{ master_ip }}:{{ nzbget_exporter_port }}']
  - job_name: 'namada'
    scrape_interval: 1m
    scrape_timeout: 30s
    fallback_scrape_protocol: PrometheusText0.0.4
    static_configs:
      - targets: ['{{ master_ip }}:{{ namada_exporter_port }}']
  - job_name: 'transmission'
    scrape_interval: 1m
    scrape_timeout: 30s
    static_configs:
      - targets: ['{{ master_ip }}:{{ transmission_exporter_port }}']
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
        - https://homeassistant.micahf.net
        - http://{{ hostvars['homeassistant']['ansible_host'] }}:8123
        - https://{{ magic_mirror_home_fqdn }}
        - https://proxmox.micahf.net
        - https://{{ radarr_fqdn }}
        - https://{{ sonarr_fqdn }}
        - https://{{ tautulli_fqdn }}
        - https://{{ fidelity_calendar_fqdn }}/fidelity.ics
        - https://{{ overseer_fqdn }}
        - https://{{ oauth_service_fqdn }}
        - https://{{ grafana_fqdn }}
        - https://{{ pgadmin_fqdn }}
        - http://{{ hostvars['plex']['ansible_host'] }}:32400/web
        - https://{{ transmission_fqdn }}

    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.
  - job_name: 'blackbox_exporter'  # collect blackbox exporter's operational metrics.
    static_configs:
      - targets: ['127.0.0.1:9115']
prometheus_alertmanager_config:
  - static_configs:
      - targets: ["127.0.0.1:9093"]
prometheus_config_flags_extra:
  web.enable-remote-write-receiver:
prometheus_alert_rules:
  - alert: EntityUnavailable
    expr: homeassistant_entity_available{entity=~"{{ alertable_entities|join('|') }}"} == 0
    for: 1h
    labels:
      severity: warning
    annotations:
      description: '{% raw %}{{ $labels.entity }} has been unavailable for 1 hour{% endraw %}'
      summary: '{% raw %}{{ $labels.entity }} is not available{% endraw %}'
  - alert: ProbeFailure
    expr: 'probe_success == 0'
    for: 5m
    labels:
      severity: critical
    annotations:
      description: '{% raw %}Probe for {{ $labels.instance }} has been failing for more than 30 minutes.{% endraw %}'
      summary: '{% raw %}Probe for {{ $labels.instance }} failed{% endraw %}'
  - alert: InstanceDown
    expr: 'up == 0'
    for: 30m
    labels:
      severity: critical
    annotations:
      description: '{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 30 minutes.{% endraw %}'
      summary: '{% raw %}Instance {{ $labels.instance }} down{% endraw %}'
  - alert: PrefectFlowFailed
    expr: 'prefect_deployment_up == 0'
    for: 1h
    labels:
      severity: critical
    annotations:
      description: '{% raw %}Prefect deployment {{ $labels.deployment_name }} has been down for more than 1 hour.{% endraw %}'
      summary: '{% raw %}Prefect deployment {{ $labels.deployment_name }} down{% endraw %}'
  - alert: NodeFilesystemSpaceFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up.{% endraw %}'
      summary: 'Filesystem is predicted to run out of space within the next 24 hours.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemSpaceFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up fast.{% endraw %}'
      summary: 'Filesystem is predicted to run out of space within the next 4 hours.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeFilesystemAlmostOutOfSpace
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.{% endraw %}'
      summary: 'Filesystem has less than 5% space left.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemAlmostOutOfSpace
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.{% endraw %}'
      summary: 'Filesystem has less than 3% space left.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeFilesystemFilesFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up.{% endraw %}'
      summary: 'Filesystem is predicted to run out of inodes within the next 24 hours.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_files_free{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemFilesFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up fast.{% endraw %}'
      summary: 'Filesystem is predicted to run out of inodes within the next 4 hours.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_files_free{job=\"node\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeFilesystemAlmostOutOfFiles
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.{% endraw %}'
      summary: 'Filesystem has less than 5% inodes left.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemAlmostOutOfFiles
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.{% endraw %}'
      summary: 'Filesystem has less than 3% inodes left.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical

alertmanager_receivers:
  - name: pushover
    pushover_configs:
      - token: "{{ lookup('bitwarden.secrets.lookup', '22fc644e-2935-4680-b3d3-b217011928b6', state_file_dir=bitwarden_state_dir) }}"
        user_key: "{{ lookup('bitwarden.secrets.lookup', '3b3498bf-4acc-4e4c-9949-b217011947a1', state_file_dir=bitwarden_state_dir) }}"
alertmanager_route:
  receiver: pushover

blackbox_exporter_configuration_modules:
  http_2xx:
    http:
      follow_redirects: true
      method: "GET"
      preferred_ip_protocol: ip4
      valid_status_codes:
        - 200
      tls_config:
        insecure_skip_verify: true
    prober: "http"
    timeout: "30s"
build_infra: true
setup_monitoring: true
prometheus_scrape_configs: "{{ prometheus_scrape_configs_raw | from_yaml }}"
pushgateway_web_listen_address: "0.0.0.0:9092"

tube_archivist_fqdn: tube.{{ tunnel_domain }}
tube_archivist_pass: "{{ lookup('bitwarden.secrets.lookup', 'c59e4eef-9ffb-4ba8-8797-b202013a47d5', state_file_dir=bitwarden_state_dir) }}"
tube_archivist_user: micah
monica_fqdn: monica.{{ tunnel_domain }}
magic_mirror_home_fqdn: magic-mirror-living-room.{{ tunnel_domain}}
todoist_token: "{{ lookup('bitwarden.secrets.lookup', 'a1f4073a-235d-442b-a982-b21901137aa8', state_file_dir=bitwarden_state_dir) }}"
k8s_namespaces:
  - media
  - monitoring
  - workflows
  - awx-operator
  - immich
  - default
  - misc
  - greatlakes

gitlab_runner_token_kubernetes: "{{ lookup('bitwarden.secrets.lookup', 'a7dc9ad3-9239-410a-8f86-b21f0116b6fa', state_file_dir=bitwarden_state_dir) }}"
gitlab_runner_token_lxc: "{{ lookup('bitwarden.secrets.lookup', '844a7701-7f2d-412a-a399-b221017cd13e', state_file_dir=bitwarden_state_dir) }}"
default_lxc_template: 'local:vztmpl/ubuntu-24.04-standard_24.04-2_amd64.tar.zst'
gitlab_runner_registration_token_type: "authentication-token"
gitlab_runner_coordinator_url: https://gitlab.com

nzbget_user: "{{ lookup('bitwarden.secrets.lookup', '90123e76-944c-42a4-87c4-b22601658e81', state_file_dir=bitwarden_state_dir) }}"
nzbget_pass: "{{ lookup('bitwarden.secrets.lookup', 'f49dccea-9193-4076-b21c-b22601659d06', state_file_dir=bitwarden_state_dir) }}"
polygon_api_key: "{{ lookup('bitwarden.secrets.lookup', '134cac6b-b117-42a3-9565-b229013bf33f', state_file_dir=bitwarden_state_dir) }}"